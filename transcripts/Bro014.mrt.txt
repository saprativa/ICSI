It's not very significant. Channel three. Channel three. Uh, channel one. Yes. O_K. Mm-hmm. Ta- Channel three. Alright. O_K, did you solve speech recognition last week? Almost. Alright! Let's do image processing. Yes, again. Great. We did it again, Morgan. Alright! Doo-doop, doo-doo. What's wrong with - ? O_K. It's April fifth. Actually, Hynek should be getting back in town shortly if he isn't already. Is he gonna come here? Uh. Well, we'll drag him here. I know where he is. So when you said "in town", you mean Oregon. U- u- u- u- uh, I meant, you know, this end of the world, yeah, is really what I meant, uh, cuz he's been in Europe. Oh. Doo, doo-doo. Doo-doo. So. I have something just fairly brief to report on. Mmm. Great! Um, I did some experim- uh, uh, just a few more experiments before I had to, uh, go away for the w- well, that week. Was it last week or whenever? Um, so what I was started playing with was the - th- again, this is the H_T_K back-end. And, um, I was curious because the way that they train up the models, they go through about four sort of rounds of - of training. And in the first round they do - uh, I think it's three iterations, and for the last three rounds e- e- they do seven iterations of re-estimation in each of those three. And so, you know, that's part of what takes so long to train the - the - the back-end for this. I'm sorry, I didn't quite get that. There's - there's four and there's seven and - I - I'm sorry. Yeah. Uh, maybe I should write it on the board. So, there's four rounds of training. Um, I g- I g- I guess you could say iterations. The first one is three, then seven, seven, and seven. And what these numbers refer to is the number of times that the, uh, H_M_M re-estimation is run. It's this program called H_E_rest. But in H_T_K, what's the difference between, uh, a - an inner loop and an outer loop in these iterations? O_K. So what happens is, um, at each one of these points, Yeah. you increase the number of Gaussians in the model. Oh, right! This was the mix up stuff. That's right. I remember now. Yeah. The mix up. Right. And so, in the final one here, you end up with, uh - for all of the - the digit words, you end up with, uh, three mixtures per state, Yeah. eh, in the final thing. So I had done some experiments where I was - I - I want to play with the number of mixtures. But, um, Mm-hmm. Uh, one, two, uh, I wanted to first test to see if we actually need to do this many iterations early on. And so, Mm-hmm. um, I - I ran a couple of experiments where I reduced that to l- to be three, two, two, uh, five, I think, and I got almost the exact same results. And - but it runs much much faster. Mm-hmm. So, um, I - I think m- it only took something like, uh, three or four hours to do the full training, As opposed to - ? Good. as opposed to wh- what, sixteen hours or something like that? Yeah. It depends. I mean, it takes - you have to do an overnight basically, the way it is set up now. Mm-hmm. Mm-hmm. So, uh, even we don't do anything else, doing something like this could allow us to turn experiments around a lot faster. And then when you have your final thing, do a full one, so it's - And when you have your final thing, we go back to this. Yeah. So, um, and it's a real simple change to make. I mean, it's like one little text file you edit and change those numbers, and you don't do anything else. And then you just run. Oh, this is a - Mm-hmm. O_K. So it's a very simple change to make and it doesn't seem to hurt all that much. So I - So you - you run with three, two, two, five? That's a- Uh, I - I have to look to see what the exact numbers were. I - I thought was, like, Yeah. three, two, two, five, but I- I'll - I'll double check. It was over a week ago that I did it, so I can't remember exactly. But, uh - Mm-hmm. O_K. Mm-hmm. Oh. Mm-hmm. um, but it's so much faster. Hmm. I- it makes a big difference. So we could do a lot more experiments and throw a lot more stuff in there. Yeah. That's great. Um. Oh, the other thing that I did was, um, I compiled the H_T_K stuff for the Linux boxes. So we have this big thing that we got from I_B_M, which is a five-processor machine. Really fast, but it's running Linux. So, you can now run your experiments on that machine and you can run five at a time and it runs, Mm-hmm. uh, as fast as, you know, uh, five different machines. Mm-hmm. So, um, I've forgotten now what the name of that machine is but I can - I can send email around about it. Yeah. And so we've got it - now H_T_K's compiled for both the Linux and for, um, the Sparcs. Um, you have to make - you have to make sure that in your dot C_S_H_R_C, um, it detects whether you're running on the Linux or a - a Sparc and points to the right executables. Uh, and you may not have had that in your dot C_S_H_R_C before, if you were always just running the Sparc. So, um, uh, I can - I can tell you exactly what you need to do to get all of that to work. Mm-hmm. Hmm. Cool. But it'll - it really increases what we can run on. So, together with the fact that we've got these faster Linux boxes and that it takes less time to do these, um, we should be able to crank through a lot more experiments. So. Mm-hmm. Hmm. So after I did that, then what I wanted to do was try increasing the number of mixtures, just to see, um - see how - how that affects performance. Yeah. So. Yeah. In fact, you could do something like keep exactly the same procedure and then add a fifth thing onto it Mm-hmm. Exactly. that had more. Yeah. Right. Right. So at - at the middle o- where the arrows are showing, Uh-huh. that's - you're adding one more mixture per state, or - ? Uh, let's see, uh. It goes from this - uh, try to go it backwards - this - at this point it's two mixtures per state. So this just adds one. Except that, uh, actually for the silence model, it's six Mm-hmm. mixtures per state. O_K. Uh, so it goes to two. Um. And I think what happens here is - Might be between, uh, shared, uh - Yeah. I think that's what it is. shared variances or something, or - Uh, yeah. It's, uh - Shoot. I - I - I can't remember now what happens at that first one. Uh, I have to look it up and see. Oh, O_K. Um, there - because they start off with, uh, an initial model which is just this global model, and then they split it to the individuals. And so, it may be that that's what's happening here. I - I - I have to look it up and see. I - I don't exactly remember. O_K. O_K. Alright. So. That's it. So what else? Um. Yeah. There was a conference call this Tuesday. Um. I don't know yet the - what happened Tuesday, but the points that they were supposed to discuss is still, uh, things like the weights, uh - Oh, this is a conference call for, uh, uh, Aurora participant sort of thing. I see. For - Yeah. Yeah. Mmm. Do you know who was - who was - since we weren't in on it, uh, do you know who was in from O_G_I? Was - was - was Hynek involved or was it Sunil or - ? I have no idea. Mmm, I just - Yeah. Oh, you don't know. O_K. Alright. Um, yeah. So the points were the - the weights - how to weight the different error rates that are obtained from different language and - and conditions. Um, it's not clear that they will keep the same kind of weighting. Right now it's a weighting on - on improvement. Mm-hmm. Some people are arguing that it would be better to have weights on uh - well, to - to combine error rates before computing improvement. Uh, and the fact is that for - right now for the English, they have weights - they - they combine error rates, but for the other languages they combine improvement. So it's not very consistent. Um - Mm-hmm. Yeah. The, um - Yeah. And so - Well, this is a point. And right now actually there is a thing also, uh, that happens with the current weight is that a very non-significant improvement on the well-matched case result in huge differences in - in the final number. Mm-hmm. Hmm. And so, perhaps they will change the weights to - Yeah. How should that be done? I mean, it - it seems like there's a simple way - Mm-hmm. Uh, this seems like an obvious mistake or something. Th- they're - Well, I mean, the fact that it's inconsistent is an obvious mistake. But the - but, um, the other thing - I don't know I haven't thought it through, but one - one would think that In- each - It - it's like if you say what's the - what's the best way to do an average, an arithmetic average or a geometric average? Mm-hmm. It depends what you wanna show. Mm-hmm. Each - each one is gonna have a different characteristic. So - Yeah. Well, it seems like they should do, like, the percentage improvement or something, rather than the absolute improvement. Tha- that's what they do. Yeah. Well, they are doing that. No, that is relative. But the question is, do you average the relative improvements or do you average the error rates and take the relative improvement maybe of that? Yeah. Yeah. And the thing is it's not just a pure average because there are these weightings. Oh. It's a weighted average. Um. Yeah. And so when you average the - the relative improvement it tends to - to give a lot of - of, um, importance to the well-matched case because the baseline is already very good and, um, i- it's - Why don't they not look at improvements but just look at your av- your scores? You know, figure out how to combine the scores Mm-hmm. with a weight or whatever, and then give you a score - here's your score. And then they can do the same thing for the baseline system - and here's its score. And then you can look at - Well, that's what he's seeing as one of the things they could do. It's just when you - when you get all done, Mm-hmm. Yeah. I think that they pro- I m- I - I wasn't there but I think they started off this process with the notion that you should be significantly better than the previous standard. Mm-hmm. And, um, so they said "how much is significantly better? what do you - ?" And - and so they said "well, you know, you should have half the errors," or something, "that you had before". Mm-hmm. Hmm. Mm-hmm. Yeah. So it's, uh, Hmm. But it does seem like i- i- it does seem like it's more logical to combine them first and then do the - Combine error rates and then - Yeah. Yeah. Yeah. Well - But there is this - this - is this still this problem of weights. When - when you combine error rate it tends to give more importance to the difficult cases, Oh, yeah? and some people think that - well, they have different, um, opinions about this. Some people think that it's more important to look at - to have ten percent imp- relative improvement on well-matched case than to have fifty percent on the m- mismatched, and other people think that it's more important to improve a lot on the mismatch and - It sounds like they don't really have a good idea about what the final application is gonna be. So, bu- l- de- fff! Well, you know, the - the thing is Mmm. Yeah. Mmm. that if you look at the numbers on the - on the more difficult cases, um, if you really believe that was gonna be the predominant use, none of this would be good enough. Nothing anybody's - whereas you sort of Mm-hmm. Yeah. with some reasonable error recovery could imagine in the better cases that these - these systems working. So, um, I think the hope would be that it would - uh, it would work well for the good cases and, uh, it would have reasonable - reas- soft degradation as you got to worse and worse conditions. Um. Yeah. I - I guess what I'm - I mean, I - I was thinking about it in terms of, if I were building the final product and I was gonna test to see which front-end I'd - I wanted to use, I would try to weight things depending on the exact environment that I was gonna be using the system in. If I - But - but - No. Well, no - well, no. I mean, it isn't the operating theater. I mean, they don- they - they don't - they don't really know, I think. Yeah. So if - if they don't know, doesn't that suggest the way for them to go? I mean, I th- Uh, @@ you assume everything's equal. I mean, y- y- I mean, you - Well, I mean, I - I think one thing to do is to just not rely on a single number - to maybe have two or three numbers, you know, and - and - and say Yeah. Right. here's how much you, uh - you improve the, uh - the - the relatively clean case and here's - or - or well-matched case, and here's how - here's how much you, Mm-hmm. uh - So not - So not try to combine them. So. Yeah. Uh, actually it's true. Uh, I had forgotten this, uh, but, uh, well-matched is not actually clean. What it is is just that, Yeah. u- uh, the training and testing are similar. The training and testing. Mmm. So, I guess what you would do in practice is you'd try to get as many, uh, examples of similar sort of stuff as you could, and then, uh - So the argument for that being the - the - the more important thing, is that you're gonna try and do that, Yeah. but you wanna see how badly it deviates from that when - when - when the, uh - it's a little different. So - Um, so you should weight those other conditions v- very - you know, really small. But - No. That's a - that's a - that's an arg- I mean, that's more of an information kind of thing. that's an ar- Well, that's an argument for it, but let me give you the opposite argument. The opposite argument is you're never really gonna have a good sample of all these different things. Uh-huh. I mean, are you gonna have w- uh, uh, examples with the windows open, half open, full open? Going seventy, sixty, fifty, forty miles an hour? On what kind of roads? With what passing you? With - uh, I mean, Mm-hmm. Mm-hmm. I - I - I think that you could make the opposite argument that the well-matched case is a fantasy. Mm-hmm. Uh-huh. You know, so, I think the thing is is that if you look at the well-matched case versus the po- you know, the - the medium and the - and the fo- and then the mismatched case, um, we're seeing really, really big differences in performance. Right? And - and y- you wouldn't like that to be the case. You wouldn't like that as soon as you step outside - You know, a lot of the - the cases it's - is - Well, that'll teach them to roll their window up. I mean, in these cases, if you go from the - the, uh - I mean, I don't remember the numbers right off, but if you - if you go from the well-matched case to the medium, it's not an enormous difference in the - in the - the training-testing situation, and - and - and it's a really big Mm-hmm. performance drop. You know, so, um - Yeah, I mean the reference one, for instance - this is back old on, uh - on Italian - uh, was like six percent error for the well-matched and eighteen for the medium-matched and sixty for the - for highly-mismatched. Uh, and, you know, with these other systems we - we helped it out quite a bit, but still there's - there's something like a factor of two or something between well-matched and medium-matched. And so I think that if what you're - if the goal of this is to come up with robust features, it does mean - So you could argue, in fact, that the well-matched is something you shouldn't be looking at at all, that - that the goal is to come up with features that will still give you reasonable performance, you know, with again gentle degregra- degradation, um, even though the - the testing condition is not the same as the training. Hmm. So, you know, I - I could argue strongly that something like the medium mismatch, which is you know not compl- pathological but - I mean, what was the - the medium-mismatch condition again? Um, it's - Yeah. Medium mismatch is everything with the far microphone, but trained on, like, low noisy condition, like low speed and - or stopped car and tested on high-speed conditions, I think, like on a highway and - So - Right. So it's still the same - same microphone in both cases, Same microphone but - Yeah. but, uh, it's - there's a mismatch between the car conditions. And that's - uh, you could argue that's a pretty realistic Yeah. situation and, uh, I'd almost argue for weighting that highest. But the way they have it now, Mm-hmm. it's - I guess it's - it's - They - they compute the relative improvement first and then average that with a weighting? Yeah. And so then the - that - that makes the highly-matched the really big thing. Mm-hmm. Um, so, u- i- since they have these three categories, it seems like the reasonable thing to do is to go across the languages and to come up with an improvement for each of those. Mm-hmm. Just say "O_K, in the - in the highly-matched case this is what happens, in the - m- the, uh - this other m- medium if this happens, in the highly-mismatched that happens". Mm-hmm. And, uh, you should see, uh, a gentle degradation through that. Mmm. Um. But - I don't know. Yeah. I think that - that - I - I - I gather that in these meetings it's - it's really tricky to make anything ac- make any policy change because everybody has - has, uh, their own opinion and - Mm-hmm. I don't know . Yeah. Yeah. Uh, so - Yeah. Yeah, but there is probably a - a big change that will be made is that the - the baseline - th- they want to have a new baseline, perhaps, which is, um, M_F_C_C but with a voice activity detector. And apparently, uh, some people are pushing to still keep this fifty percent number. So they want to have at least fifty percent improvement on the baseline, Mm-hmm. but w- which would be a much better baseline. Mm-hmm. And if we look at the result that Sunil sent, just putting the V_A_D in the baseline improved, like, more than twenty percent, Mm-hmm. which would mean then - then - mean that fifty percent on this new baseline is like, well, more than sixty percent improvement on - So nobody would be there, probably. Right? on - o- e- e- uh - Right now, nobody would be there, but - Good. Yeah. Work to do. Uh-huh. So whose V_A_D is - Is - is this a - ? Uh, they didn't decide yet. I guess i- this was one point of the conference call also, but - mmm, so I don't know. Um, but - Yeah. Oh. Oh, I - I think th- that would be good. I mean, it's not that the design of the V_A_D isn't important, but it's just that it - it - it does seem to be i- uh, a lot of work to do a good job on - on that and as well as being a lot of work to do a good job on the feature design, so Yeah. Yeah. if we can cut down on that maybe we can make some progress. M- Yeah. Hmm. But I guess perhaps - I don't know w- Yeah. Uh, yeah. Per- e- s- s- someone told that perhaps it's not fair to do that because the, um - to make a good V_A_D you don't have enough to - with the - the features that are - the baseline features. So - mmm, you need more features. So you really need to put more - more in the - in - in the front-end. Yeah. So i- Um, S- sure. But i- bu- Wait a minute. I - I'm confused. Wha- what do you mean? Yeah. Yeah, if i- So y- so you m- s- Yeah, but - Well, let's say for ins- see, M_F_C_C for instance doesn't have anything in it, uh, related to the pitch. So just - just for example. So suppose you've - that what you really wanna do is put a good pitch detector on there and if it gets an unambiguous - Oh, oh. I see. Mm-hmm. if it gets an unambiguous result then you're definitely in a - in a - in a voice- in a, uh, s- region with speech. Uh. So there's this assumption that the v- the voice activity detector can only use the M_F_C_C? That's not clear, but this - e- Well, for the baseline. Yeah. So - so if you use other features then y- But it's just a question of what is your baseline. I g- Yeah. Right? What is it that you're supposed to do better than? And so I don't s- having the baseline be the M_F_C_C's means that people could choose to pour their ener- their effort into trying to do a really good V_A_D But they seem like two separate issues. Right? I mean - or tryi- They're sort of separate. Unfortunately there's coupling between them, which is part of what I think Stephane is getting to, is that you can choose your features in such a way as to improve the V_A_D. Yeah. And you also can choose your features in such a way as to prove - improve recognition. They may not be the same thing. But it seems like you should do both. Right? You should do both and - and I - I think that this still makes - I still think this makes sense as a baseline. It's just saying, as a baseline, we know - Mmm. you know, we had the M_F_C_C's before, lots of people have done voice activity detectors, Mm-hmm. you might as well pick some voice activity detector and make that the baseline, just like you picked some version of H_T_K and made that the baseline. Yeah. Right. And then let's try and make everything better. Um, and if one of the ways you make it better is by having your features be better features for the V_A_D then that's - so be it. But, Mm-hmm. uh, uh, uh, at least you have a starting point that's - um, cuz i- i- some of - the some of the people didn't have a V_A_D at all, I guess. Right? And - and Yeah. then they - they looked pretty bad and - and in fact what they were doing wasn't so bad at all. But, Mm-hmm. Mm-hmm. Yeah. It seems like you should um. try to make your baseline as good as possible. And if it turns out that you can't improve on that, well, I mean, then, you know, nobody wins and you just use M_F_C_C. Right? Yeah. I mean, it seems like, uh, it should include sort of the current state of the art that you want - are trying to improve, and M_F_C_C's, you know, or P_L_P or something - it seems like reasonable baseline for the features, and anybody doing this task, uh, is gonna have some sort of voice activity detection at some level, in some way. They might use the whole recognizer to do it but - rather than a separate thing, but - but they'll have it on some level. So, um. It seems like whatever they choose they shouldn't, you know, purposefully brain-damage a part of the system to make a worse baseline, or - You know? Well, I think people just had- it wasn't that they purposely brain-damaged it. I think people hadn't really thought through about the, uh - the V_A_D issue. Mmm. Mm-hmm. And - and then when the - the - the proposals actually came in and half of them had V_A_Ds and half of them didn't, and the half that did did well and the half that didn't did poorly. So it's - Mm-hmm. Mm-hmm. Um. Uh. Yeah. So we'll see what happen with this. And - Yeah. So what happened since, um, last week is - well, from O_G_I, these experiments on putting V_A_D on the baseline. And these experiments also are using, uh, some kind of noise compensation, so spectral subtraction, and putting on-line normalization, um, just after this. So I think spectral subtraction, L_D_A filtering, and on-line normalization, so which is similar to the pro- proposal-one, but with spectral subtraction in addition, and it seems that on-line normalization doesn't help further when you have spectral subtraction. Um. Is this related to the issue that you brought up a couple of meetings ago with the - the musical tones and - ? I - I have no idea, because the issue I brought up was with a very simple spectral subtraction approach, Mmm. and the one that they use at O_G_I is one from - from the proposed - the - the - the Aurora prop- uh, proposals, which might be much better. So, yeah. I asked Sunil for more information about that, but, uh, I don't know yet. Um. And what's happened here is that we - so we have this kind of new, um, reference system which use a nice - a - a clean downsampling-upsampling, which use a new filter that's much shorter and which also cuts Right. the frequency below sixty-four hertz, which was not done on our first proposal. When you say "we have that", does Sunil have it now, too, or - ? I- No. No. O_K. Because we're still testing. So we have the result for, O_K. uh, just the features and we are currently testing with putting the neural network in the K_L_T. Um, it seems to improve on the well-matched case, um, but it's a little bit worse on the mismatch and highly-mismatched - I mean when we put the neural network. And with the current weighting I think it's sh- it will be better because the well-matched case is better. Mmm. But how much worse - since the weighting might change - how - how much worse is it on the other conditions, when you say it's a little worse? It's like, uh, fff, fff um, ten percent relative. Yeah. O_K. Um. Mm-hmm. But it has the, uh - the latencies are much shorter. That's - Uh- y- w- when I say it's worse, it's not - it's when I - I - uh, compare proposal-two to proposal-one, so, r- uh, y- putting neural network compared to n- not having any neural network. Uh-huh. I mean, this new system is - is - is better, because it has um, this sixty-four hertz cut-off, uh, clean downsampling, and, um - what else? Uh, yeah, a good V_A_D. We put the good V_A_D. So. Yeah, I don't know. I - I - j- uh, uh - pr- But the latencies - but you've got the latency shorter now. Yeah. Latency is short - is - Yeah. Isn't it @@ And so- So it's better than the system that we had before. Yeah. Mainly because of the sixty-four hertz and the good V_A_D. O_K. And then I took this system and, mmm, w- uh, I p- we put the old filters also. So we have this good system, with good V_A_D, with the short filter and with the long filter, and, um, with the short filter it's not worse. So - well, is it - O_K. So that's - that's all fine. But what you're saying is that when you do these - So let me try to understand. When - when you do these same improvements to proposal-one, it's in - Yes. Uh - Mm-hmm. that, uh, on the - i- things are somewhat better, uh, in proposal-two for the well-matched case and somewhat worse for the other two cases. Yeah. So does, uh - when you say, uh - So - The th- now that these other things are in there, is it the case maybe that the additions of proposal-two over proposal-one are less im- important? Yeah. Probably, yeah. I get it. Um - So, yeah. Uh. Yeah, but it's a good thing anyway to have shorter delay. Then we tried, um, to do something like proposal-two but having, um, e- using also M_S_G features. So there is this K_L_T part, which use Mm-hmm. Right. just the standard features, and then two neura- two neural networks. Mm-hmm. Mmm, and it doesn't seem to help. Um, however, we just have one result, which is the Italian mismatch, so. Uh. We have to wait for that to fill the whole table, but - O_K. There was a start of some effort on something related to voicing or something. Is that - ? Yeah. Um, yeah. So basically we try to, uh, find good features that could be used for voicing detection, uh, but it's still, uh - on the, um - Oh, well, I have the picture. t- we - w- basically we are still playing with Matlab to - to look at - at what happened, and - What sorts of - Yeah. We have some - what sorts of features are you looking at? So we would be looking at, um, the variance of the spectrum uh, um, this, this, and this. of the excitation, something like this, which is - should be high for voiced sounds. Uh, we - Wait a minute. I - what does that mean? The variance of the spectrum of excitation. Yeah. So the - So basically the spectrum of the excitation for a purely periodic sig- signal shou- sh- O_K. Yeah, w- what yo- what you're calling the excitation, as I recall, is you're subtracting the - the, um - e- the mel - mel - mel filter, uh, spectrum from the F_F_T spectrum. Right. That's right. Yeah. So - Mm-hmm. Yeah. So we have the mel f- filter bank, we have the F_F_T, so we just - So it's - it's not really an excitation, but it's something that hopefully tells you something about the excitation. No. Yeah, that's right. Um - Yeah, yeah. Yeah. We have here some histogram, but they have a lot of overlap. E- yeah, but it's - it's still - Yeah. So, well, for unvoiced portion we have something tha- that has a mean around O_ point three, and for voiced portion the mean is O_ point fifty-nine. But the variance seem quite high. So - Mmm. How do you know - ? How did you get your voiced and unvoiced truth data? We used, uh, TIMIT and we used canonical mappings between the phones and Yeah. We, uh, use TIMIT on this, for - th- Yeah. But if we look at it in one sentence, it - apparently it's good, I think . Yeah, but - Yeah. Uh, so it's noisy TIMIT. That's right. Yeah. It's noisy TIMIT. Yeah. It seems quite robust to noise, so when we take - we draw its parameters across time for a clean sentence and then nois- the same noisy sentence, it's very close. Mm-hmm. Yeah. So there are - there is this. There could be also the, um - something like the maximum of the auto-correlation function or - which - Is this a - a s- a trained system? Or is it a system where you just pick some thresholds? Ho- how does it work? Right now we just are trying to find some features. Mm-hmm. And, uh - Yeah. Hopefully, I think what we want to have is to put these features in s- some kind of, um - well, to - to obtain a statistical model on these features and to - or just to use a neural network and hopefully these features w- would help - Because it seems like what you said about the mean of the - the voiced and the unvoiced - Mm-hmm. that seemed pretty encouraging. Right? Well, yeah, except the variance was big. Right? Yeah. Except the variance is quite high. Yeah. Well, y- Well, y- I - I don't know that I would trust that so much because you're doing these canonical mappings from TIMIT labelings. Right? So, Uh-huh. really that's sort of a cartoon picture about what's voiced and unvoiced. So that could be giving you a lot of variance. Yeah. I mean, i- it - it may be that - that you're finding something good and that the variance is sort of artificial because of how you're getting your truth. Yeah. But another way of looking at it might be that - I mean, what w- we- we are coming up with feature sets after all. Mm-hmm. So another way of looking at it is that um, the mel cepstru- mel spectrum, mel cepstrum, any of these variants, um, give you the smooth spectrum. It's the spectral envelope. By going back to the F_F_T, you're getting something that is more like the raw data. So the question is, what characterization - and you're playing around with this - another way of looking at it is what characterization of the difference between the raw data and this smooth version is something that you're missing that could help? So, I mean, looking at different statistical measures of that difference, coming up with some things and just trying them out and seeing if you add them onto the feature vector does that make things better or worse in noise, where you're really just i- i- the way I'm looking at it is not so much you're trying to f- find the best - the world's best voiced-unvoiced, uh, uh, classifier, but it's more that, Mm-hmm. Mmm. you know, uh, uh, try some different statistical characterizations of that difference back to the raw data and - and Right. Right. m- maybe there's something there that the system can use. Yeah. Yeah, but ther- more obvious is that - Yeah. The - the more obvious is that - that - well, using the - th- the F_F_T, um, you just - it gives you just information about if it's voiced or not voiced, ma- mainly, I mean. But - So, Yeah. this is why we - we started to look by having Well, that's the rea- w- w- what I'm arguing is that's- sort of voiced Yeah. I mean, uh, what I'm arguing is that that - that's givi- you - gives you your intuition. phonemes and - But in - in reality, it's - you know, there's all of this - this overlap and so forth, Mm-hmm. Oh, sorry. and - But what I'm saying is that may be O_K, because what you're really getting is not actually voiced versus unvoiced, both for the fac- the reason of the overlap and - and then, uh, th- you know, structural reasons, uh, uh, like the one that Chuck said, that - that in fact, well, the data itself is - that you're working with is not perfect. Yeah. Mm-hmm. So, what I'm saying is maybe that's not a killer because you're just getting some characterization, one that's driven by your intuition about voiced-unvoiced certainly, Mm-hmm. but it's just some characterization of something back in the - in the - in the almost raw data, rather than the smooth version. Mm-hmm. And your intuition is driving you towards particular kinds of, uh, statistical characterizations of, um, what's missing from the spectral envelope. Mm-hmm. Um, obviously you have something about the excitation, um, and what is it about the excitation, and, you know - and you're not getting the excitation anyway, you know. So - so I - I would almost take a - uh, especially if - if these trainings and so forth are faster, I would almost just take a uh, a scattershot at a few different ways of look- of characterizing that difference and, uh, you could have one of them but - and - and see, you know, which of them helps. Mm-hmm. So i- is the idea that you're going to take whatever features you develop and - and just add them onto the future vector? O_K. Or, what's the use of the - the voiced-unvoiced detector? Uh, I guess we don't know exactly yet. But, um - Yeah. Th- It's not part of a V_A_D system that you're doing? No. Uh, no. No. No, the idea was, I guess, to - to use them as - as features. Oh, O_K. Features. I see. Uh - Yeah, it could be, uh - it could be a neural network that does voiced and unvoiced detection, Mm-hmm. but it could be in the - also the big neural network that does phoneme classification. Mm-hmm. Mmm. Yeah. But each one of the mixture components - I mean, you have, uh, uh, variance only, so it's kind of like you're just multiplying together these, um, probabilities from the individual features within each mixture. So it's - so, uh, it seems l- you know - I think it's a neat thing. Uh, it seems like a good idea. Yeah. Um. Yeah. I mean, I know that, um, people doing some robustness things a ways back were - were just doing - just being gross and just throwing in the F_F_T and actually it wasn't - wasn't - wasn't so bad. Uh, so it would s- and - and you know that i- it's gotta hurt you a little bit to not have a - a spectral, uh - a s- a smooth spectral envelope, so there must be something else that you get in return for that - that, uh - Mm-hmm. uh - So. So how does - uh, maybe I'm going in too much detail, but how exactly do you make the difference between the F_F_T and the smoothed spectral envelope? Wha- wh- i- i- uh, how is that, uh - ? Um, we just - How did we do it up again? Uh, we distend the - we have the twenty-three coefficient af- after the mel f- Mm-hmm. filter, and we extend these coefficient between the - all the frequency range. Mm-hmm. And i- the interpolation i- between the point is - give for the triang- triangular filter, the value of the triangular filter and of this way we obtained this mode- So you essentially take the values that - th- that you get from the triangular filter and extend them this model speech. S- to sor- sort of like a rectangle, that's at that Yeah. Mm-hmm. m- value. Yeah. I think we have linear interpolation. So we have - we have one point for - mmm Yeah, it's linear. Mmm. one energy for each filter bank, which is the energy that's centered on - on - on the triangle - Oh. Yeah. At the n- @@ at the center of the filter - So you - you end up with a vector that's the same length as the F_F_T vector? And then you just, uh, compute differences and, Yeah. That's right. Yeah. Yeah. I have here one example if you - if you want see something like that. Then we compute the difference. Yeah. Uh-huh. uh, sum the differences? O_K. So. And I think the variance is computed only from, like, two hundred hertz to one - to fifteen hundred. Oh! O_K. Mm-hmm. Two thou- two - fifteen hundred? No. Mm-hmm. Because - Right. Two hundred and fifty thousand. Fifteen hundred. Because - Yeah. Yeah. Two thousand and fifteen hundred. Above, um - it seems that - Well, some voiced sound can have also, like, a noisy part on high frequencies, and - Yeah. No, it's - makes sense to look at low frequencies. But - Well, it's just - So this is - uh, basically this is comparing an original version of the signal to a smoothed version of the same signal? Yeah. Right. So i- so i- i- this is - I mean, i- you could argue about whether it should be linear interpolation or - or - or - or zeroeth order, but - but Uh-huh. at any rate something like this is what you're feeding your recognizer, typically. Like which of the - ? No. Uh, so the mel cepstrum is the - is the - is the cepstrum of this - So this is - Yeah. Yeah. this, uh, spectrum or log spectrum, whatever it - You- you're subtracting in - in - in power domain or log domain? Right, right. In log domain. Yeah. Log domain. O_K. So it's sort of like division, when you do the - yeah, the spectra. Yeah. Uh, yeah. Um. It's the ratio. Yeah. But, anyway, um - and that's - So what's th- uh, what's the intuition behind this kind of a thing? I - I don't know really know the signal-processing well enough to understand what - So. what is that doing. Yeah. What happen if - what we have - have - what we would like to have is some spectrum of the excitation signal, Yeah. I guess that makes sense. Yeah. which is for voiced sound ideally a - a pulse train Uh-huh. and for unvoiced it's something that's more flat. Uh-huh. Right. And the way to do this is that - well, we have the - we have the F_F_T because it's computed in - in the - in the system, and we have Mm-hmm. the mel filter banks, Mm-hmm. and so if we - if we, like, remove the mel filter bank from the F_F_T, we have something that's close to the excitation signal. Oh. O_K. It's something that's like Oh! O_K. Yeah. a - a- a train of p- a pulse train for voiced sound and that's - that should be flat for - Yeah. Yeah. I see. So do you have a picture that sh- ? Is this for a voiced segment, this picture? So- It's - Y- yeah. Yeah. What does it look like for unvoiced? You have several - some unvoiced? The dif- No. Unvoiced, I don't have for unvoiced. I'm sorry. Oh. Yeah. So, you know, all - Yeah. But - Yeah. Yeah. This is the - between - This is another voiced example. Yeah. No. But it's this, Oh, yeah. This is - but between the frequency that we are considered for the excitation - for the difference and this is the difference. Right. Mm-hmm. This is the difference. O_K. Yeah. Yeah. So, of course, it's around zero, but - Well, no. It is - Sure looks - Hmm. Hmm. Yeah. Because we begin, uh, in fifteen So, point - the fifteen point. does - does the periodicity of this signal say something about the - the - Fifteen p- So it's - Pitch. Yeah. It's the pitch. Yeah. Mm-hmm. the pitch? O_K. Yeah. That's like fundamental frequency. Mm-hmm. So, I mean, i- t- t- I mean, to first order what you'd - what you're doing - O_K. I see. I mean, ignore all the details and all the ways which is - that these are complete lies. Mm-hmm. Uh, the - the - you know, what you're doing in feature extraction for speech recognition is you have, uh, in your head a - a - a - a simplified production model for speech, in which you have Yeah. Mm-hmm. This is the - the auto-correlation - the R_zero energy. a periodic or aperiodic source that's driving some filters. Do you have the mean - do you have the mean for the Uh, first order for speech recognition, you say "I don't care about the source". Right? For - auto-correlation - ? Yeah. I have the mean. Well, I mean for the - the energy. Right. Right. And so you just want to find out what the filters are. The filters roughly act like a, um - a, uh - Yeah. Here. They should be more close. Ah, no. This is this? More close. Is this? a- an overall resonant - you know, f- some resonances and so forth that th- that's processing excitation. And this. Mm-hmm. Mm-hmm. Yeah. So they are - this is - there is less difference. Mm-hmm. So if you look at the spectral envelope, just the very smooth properties of it, you get something closer to that. This is less - it's less robust. Less robust. Yeah. Oh, yeah. And the notion is if you have the full spectrum, with all the little nitty-gritty details, Yeah. that that has the effect of both, and it would be a multiplication in - in frequency domain so that would be like an addition in log - Mm-hmm. Mm-hmm. Mm-hmm. power spectrum domain. And so this is saying, well, if you really do have that sort of vocal tract envelope, and you subtract that off, what you get is the excitation. And I call that lies because you don't really have that, you just have some kind of signal-processing trickery to get something that's kind of smooth. It's not really what's happening in the vocal tract so you're not really getting the vocal excitation. Yeah. Right. That's why I was going to the - why I was referring to it in a more - a more, uh, uh, conservative way, when I was saying "well, it's - yeah, it's the excitation". But it's not really the excitation. It's whatever it is that's different between - Oh. This moved in the - Yeah. So - so, stand- standing back from that, you sort of say there's this very detailed representation. Mm-hmm. You go to a smooth representation. You go to a smooth representation cuz this typically generalizes better. Mm-hmm. Um, but whenever you smooth you lose something, so the question is have you lost something you can you use? Right. Um, probably you wouldn't want to go to the extreme of just ta- saying "O_K, our feature set will be the F_F_T", cuz we really think we do gain something in robustness from going to something smoother, Mm-hmm. but maybe there's something that we missed. Yeah. So what is it? And then you go back to the intuition that, well, you don't really get the excitation, but you get something related to it. Mm-hmm. Mm-hmm. And it - and as you can see from those pictures, you do get something that shows some periodicity, uh, in frequency, you know, and - and - and also in time. So - so, Hmm. That's - that's really neat. So you don't have one for unvoiced picture? Uh, not here. No, I have s- But not here. Oh. Mm-hmm. Yeah. But presumably you'll see something that won't have this kind of, uh, uh, uh, regularity in frequency, uh, in the - But - Yeah. Well. Not here. I would li- I would like to see those pictures. Yeah. Well, so. Yeah. I can't see you Yeah. now. Yeah. I don't have. Mm-hmm. And so you said this is pretty - doing this kind of thing is pretty robust to noise? It seems, yeah. Um, Pfft. Huh. Oops. The mean is different with it, because the - the histogram for the - the classifica- Oh! No, no, no. But th- the kind of robustness to noise - So if - if you take this frame, Hmm. uh, from the noisy utterance and the same frame from the clean utterance - You end up with a similar difference Y- y- y- yeah. We end up with - over here? Yeah. O_K. Cool! I have here the same frame for the clean speech - Oh, that's clean. Oh, O_K- the same cle- But they are a difference. Because here the F_F_T is only with Yeah, that's - two hundred fifty-six point and this is with five hundred twelve. Oh. O_K. Yeah. This is kind of inter- interesting also because if we use the standard, uh, frame length of - of, like, twenty-five milliseconds, um, what happens is that for low-pitched voiced, because of the frame length, y- you don't really have - you don't clearly see this periodic structure, Mm-hmm. because of the first lobe of - of each - each of the harmonics. So this one inclu- is a longer - Ah. So, this is like - yeah, fifty milliseconds or something like that. Fifty millis- Yeah. Yeah, but it's the same frame and - Oh, it's that time-frequency trade-off thing. Right? Yeah. I see. Yeah. Mm-hmm. Oh. Oh, so this i- is this the difference here, So, yeah. No. This is the signal. This is the signal. for that? I see that. Oh, yeah. The frame. Oh, that's the f- the original. This is the fra- the original frame. Yeah. So with a short frame basically you have only two periods and it's not - not enough to - to have this kind of neat things. But - Yeah. Mm-hmm. Yeah. Mm-hmm. And here - No, well. Yeah. So probably we'll have to use, like, long f- long frames. Mm-hmm. Mm-hmm. Hmm. Oh. That's interesting. Mmm. Yeah, maybe. Well, I mean it looks better, but, I mean, the thing is if - if, uh - if you're actually asking - you know, if you actually j- uh, need to do - place along an F_F_T, it may be - it may be pushing things. Yeah. And - and, uh - Would you - would you wanna do this kind of, uh, difference thing after you do spectral subtraction? Uh, maybe. No. Maybe we can do that. Mmm. Hmm. The spectral subtraction is being done at what level? Is it being done at the level of F_F_T bins or at the level of, uh, mel spectrum or something? Um, I guess it depends. I mean, how are they doing it? How they're doing it? Yeah. Um, I guess Ericsson is on the, um, filter bank, no? F_F_T. Filter bank, yeah. It's on the filter bank, so. So, yeah, probably - So in that case, it might not make much difference at all. I- i- it - Yeah. Seems like you'd wanna do it on the F_F_T bins. Maybe. I mean, certainly it'd be better. I- I mean, if you were gonna - uh, for - for this purpose, that is. Mm-hmm. Yeah. Yeah. Mm-hmm. O_K. Mmm. What else? Uh. Yeah, that's all. @@ So we'll perhaps try to convince O_G_I people to use the new - the new filters and - Yeah. O_K. Uh, has - has anything happened yet on this business of having some sort of standard, uh, Uh, source, or - ? not yet but I wi- I will call them and - O_K. now they are - I think they have more time because they have this - well, Eurospeech deadline is over and - When is the next, um, Aurora deadline? It's, um, in June. June. Yeah. Early June, late June, middle June? I don't know w- Hmm. Hmm. O_K. Um, and he's been doing all the talking but - but these - he's - he's, uh - Yeah. This is - this by the way a bad thing. We're trying to get, um, m- more female voices in this record as well. So. Make sur- make sure Carmen talks as well. Uh, but has he pretty much been talking about what you're doing also, and - ? Oh, I - I am doing this. Yeah, yeah. I don't know. I'm sorry, but Yes. I think that for the recognizer for the meeting recorder that it's better that I don't speak. Yeah, well. You know, uh, we'll get - we'll get to, uh, Spanish voices sometime, and we do - we want to recognize, uh, you too. Because - After the - after, uh, the result for the T_I-digits on the meeting record there will be foreigns people. Y- Yeah, but - Oh, no. We like - we - we're - we're - w- we are - we're in the, uh, Bourlard-Hermansky-Morgan, uh, frame of mind. Yeah, we like high error rates. It's - That way there's lots of work to do. So it's - Yeah. Uh, anything to N- um, not- not- not much is new. So when I talked about what I'm planning to do last time, talk about? I said I was, um, going to use Avendano's method of, um, using a transformation, um, to map from long analysis frames which are used for removing reverberation to short analysis frames for feature calculation. He has a trick for doing that involving viewing the D_F_T as a matrix. Um, but, uh, um, I decided not to do that after all because I - I realized to use it I'd need to have these short analysis frames get plugged directly into the feature computation somehow and right now I think our feature computation is set to up to, um, Mm-hmm. take, um, audio as input, in general. So I decided that I - I'll do the reverberation removal on the long analysis windows and then just re-synthesize audio and then send that. This is in order to use the S_R_I system or something. Right? Um, or - or even if I'm using our system, I was thinking it might be easier to just re-synthesize the audio, Yeah? because then I could just feacalc as is and I wouldn't have to change the code. Oh, O_K. Yeah. I mean, it's - um, certainly in a short - short-term this just sounds easier. Uh-huh. Yeah. I mean, longer-term if it's - if it turns out to be useful, one - one might want to Right. That's true. do something else, but - Uh, uh, I mean, in - in other words, you - you may be putting But - e- u- other kinds of errors in from the re-synthesis process. From the re-synthesis? Um, O_- O_K. I don't know anything about re-synthesis. Uh, how likely do you think that is? Yeah. Uh, it depends what you - what you do. I mean, it's - it's - it's, uh, um - Don't know. But anyway it sounds like a reasonable way to go for a - for an initial thing, and we can look at - at exactly what you end up doing and - and then figure out if there's some - something that could be - be hurt by the end part of the process. O_K. O_K. So that's - That - Yeah, e- That's it, that's it. Uh-huh. That was it, huh? O_K. O_K. Um, anything to add? Um. Well, I've been continuing reading. I went off on a little tangent this past week, um, looking at, uh, uh, modulation s- spectrum stuff, um, and - and learning a bit about what - what, um - what it is, and, uh, the importance of it in speech recognition. And I found some - some, uh, neat papers, um, historical papers from, um, Kanedera, Hermansky, and Arai. And they - they did a lot of experiments where th- where, um, they take speech Yeah. and, um, e- they modify the, uh - they - they - they measure the relative importance of having different, um, portions of the modulation spectrum intact. And they find that the - the spectrum between one and sixteen hertz in the modulation is, uh - is im- important for speech recognition. Yeah. Um. Sure. I mean, this sort of goes back to earlier stuff by Drullman. Yeah. And - and, uh, the - the M_S_G features were sort of built up Right. with this notion - But, I guess, I thought you had brought this up in the context of, um, targets somehow. Right. Um - But i- m- i- it's not - I mean, they're sort of not in the same kind of category as, say, a phonetic target or a syllabic target or a - Mmm. Mm-hmm. Um, I was thinking more like using them as - as the inputs to - to the detectors. or a feature or something. Oh, I see. Yeah. Well, that's sort of what M_S_G does. Yeah. Right? So it's - Mm-hmm. But - but, uh - S- Yeah. Yeah. Anyway, we'll talk more about it later. Yeah. O_K. We can talk more about it later. Yeah. Yeah. Yeah. So maybe, le- let's do digits. Should we do digits? Let you - you start. Oh, O_K. Reading transcript L_ dash five six. One seven six eight, six six nine one, seven nine two one. Two O_ three, five O_, O_ one two five. Four zero five six, four, three three four. Nine two nine zero, three one one four, eight six two nine. Four one three, six two five, six six nine zero. Four three, six seven, six one, five two, nine eight. Seven six, three three, three seven, seven eight, two three. Eight four two, six one, four six two seven. Transcript L_ fifty-five, or transcript L_ five five. Six eight seven, seven one five, zero seven five. Eight nine six zero, three, eight six five. Five six six, two zero, zero two nine six. Eight four two eight, nine, one six four. One six eight, six two, four zero one three. Three one, two six, six one, nine nine, six zero. Eight three seven zero, eight, zero eight zero. Six two three six, four zero zero six, nine seven four three. Transcript L_ dash four nine. Eight eight four, two five nine, seven four five zero. Seven eight seven, zero one zero, six one five eight. Seven four, two two, five zero, three nine, seven zero. Eight five eight, zero three, four seven one four. Zero six zero, four four, two, zero zero one. Two two nine three, three, one two eight. Eight, five five eight, five five, eight six nine, one. Three five eight, two nine, four O_ one seven. Transcript L_ fifty. Um, nine O_ six seven, three, nine three three. O_, eight three O_, O_ eight, three four eight, one. Two one three, six five, three one five nine. Four O_, eight four, three O_, five two, one one. Nine two four, five eight four, five five zero four. Two two, two six, one six, eight one, five five. Seven O_ seven, O_ eight seven, eight four O_ two eight O_ three, one six O_, five O_, seven four. Transcript L_ dash fifty three. Five nine, five four, eight eight, three nine, one four. Eight six zero, three one zero, nine seven five three. Five five, five two, nine nine, three three, six five. Three three seven, zero seven, four seven one zero. Six four one eight, three, one six six. Five seven six, eight nine five, nine one six. Two two, eight three, three zero, five five, nine five. Zero five nine, six one five, zero two five. Transcript L_ dash f- fifty-four. One four three one seven seven one O_ three two. Nine eight two four eight eight eight one two. One three one, zero five seven, six eight one two. Six two eight eight, seven five, nine one, two zero. Five two seven two, eight, six one seven. Four nine eight, O_ O_ O_, seven zero nine. Eight six two, four five, eight eight, nine two. Two two one, one nine, six seven eight three. Right. @@ 