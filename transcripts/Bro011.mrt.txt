-st. Am I on? I guess so. Radio two. Hmm. Radio two. Hello? Video killed the radio star. Wow. Mm-hmm. Hi? Blow into it, it works really well. Channel B_. People say the strangest things when their microphones are on. Channel four. Test. O_K. Uh-oh. Radio four. Hello? Today's So everybody- everybody's on? Yeah. So y- you guys had a - a meeting with uh - with Hynek which I unfortunately had to miss. Um Mmm. and uh somebody eh e- and uh I guess Chuck you weren't there either, so the- uh I was there. Oh you were there? With Hynek? Yeah. Yeah. So everybody knows what happened except me. O_K. Maybe somebody should tell me. Oh yeah. Alright. Well. Uh first we discussed about some of the points that I was addressing in the mail I sent last week. Uh-huh. So. Yeah. About the um, well - the downsampling problem. Yeah. Uh and about the f- the length of the filters and - Yeah. What was the - w- what was the downsampling problem again? I forget. So we had - So the fact that there - there is no uh low-pass filtering before the downsampling. Well. Uh-huh. There is because there is L_D_A filtering but that's perhaps not uh the best w- m- Well. Depends what it's frequency characteristic is, yeah. Mm-hmm. System on So you could do a - you could do a stricter one. Maybe. Yeah. Yeah. So we discussed about this, about the um - Was there any conclusion about that? Uh "try it". Yeah. I see. I guess. Uh. Yeah. So again this is th- this is the downsampling uh of the uh - the feature vector stream and um Yeah I guess the - the uh L_D_A filters they were doing do have um uh let's see, so the - the - the feature vectors are calculated every ten milliseconds so uh the question is how far down they are at fifty - fifty hertz. Uh. Yeah. Mm-hmm. Um. Sorry at twenty- five hertz since they're downsampling by two. So. Does anybody know what the frequency characteristic is? We don't have yet Oh O_K. um So, yeah. O_K. We should have a look first at, perhaps, Yeah. the modulation spectrum. Um. So there is this, there is the um length of the filters. Um. So the i- this idea of trying to find filters with shorter delays. Um. Hmm-hmm. We started to work with this. Mmm. And the third point um was the um, yeah, the on-line normalization where, well, the recursion f- recursion for the mean estimation is a filter with some kind of delay Yeah. and that's not taken into account right now. Um. Yeah. And there again, yeah. For this, the conclusion of Hynek was, well, "we can try it but -" Uh-huh. Um. Try - try what? So try to um um take into account the delay of the recursion for the mean estimation. O_K. Mmm. And this - we've not uh worked on this yet. Um, yeah. And so while discussing about these - these L_D_A filters, some i- issues appeared, like well, the fact that if we look at the frequency response of these filters it's uh, well, we don't know really what's the important part in the frequency response and there is the fact that in the very low frequency, these filters don't - don't really remove a lot. compared to the - to the uh standard RASTA filter. Uh and that's probably a reason why, yeah, on-line normalization helps because Right. it - it, yeah, it removed this mean. Um. Yeah, but perhaps everything could - should be - could be in the filter, I mean, uh the - the mean normalization and - Yeah. So. Yeah. So basically that was - that's all we discussed about. We discussed about good things to do also uh well, generally good stuff Mm-hmm. to do for the research. And this was this L_D_A uh tuning perhaps and Hynek proposed again to his uh TRAPS, so. O_K. Yeah, um. I mean I g- I guess the key thing for me is - is figuring out how to better coordinate between the two sides cuz - because um Mm-hmm. uh I was talking with Hynek about it later and the - the - sort of had the sense sort of that - that neither group of people wanted to - to bother the other group too much. And - and I don't think anybody is, you know, closed in in their thinking or are unwilling to talk about things but I think that you were sort of waiting for them to tell you that they had something for you and - and that - and expected that they would do certain things and they were sor- they didn't wanna bother you and Mm-hmm. they were sort of waiting for you and - and - and uh we ended up with this thing where they - they were filling up all of the possible latency themselves, and they just had- hadn't thought of that. So. Uh. Yeah. Well, but. Yeah. Yeah. I mean it's true that maybe - maybe no one really thought about that - that this latency thing would be such a - a strict issue Well - in - in uh - the other - Yeah I don't know what happened really, but Yeah. I guess it's - it's also so uh the time constraints. Because, well, we discussed about that - about this problem and they told us "well, we will do all that's possible to have enough space for a network" but then, yeah, Then they couldn't. perhaps they were too short with the time and I see. uh yeah. But there was also problem - perhaps a problem of communication. So, yeah. Now we will try to - Just talk more. Yeah, slikes and send mails. u- s- o- o- Yeah. Yeah. Yeah. Uh. O_K . So there's um - Alright. Well maybe we should just uh I mean you're - you're bus- other than that you folks are busy doing all the - all the things that you're trying that we talked about before right? And this - machines are busy and you're busy and Yeah. Basically. Yeah. O_K. Um. Oh. Let's - let's, I mean, I think that as - as we said before that one of the things that we're imagining is that uh there - there will be uh in the system we end up with there'll be something to explicitly uh uh do something about noise in addition to the Mm-hmm. uh other things that we're talking about and that's probably the best thing to do. And there was that one email that said that it sounded like uh uh things looked very promising up there in terms of uh I think they were using Ericsson's approach or something and in addition to - They're doing some noise removal thing, right? Yeah, yeah. So yeah we're - will start to do this also. Yeah. Uh so Carmen is just looking at the Ericsson - Ericsson code. Yeah. We modif- Mm-hmm. Yeah, I modified it - well, modifying - And I studied Barry's sim code , more or less. to take @@ the first step the spectral subtraction. and we have some - the feature for Italian database and we will try with this feature with the filter Mm-hmm. Mm-hmm. to find the result. But we haven't result until this moment. Yeah, sure. But well, we are working in this also and maybe try another type of spectral subtraction, I don't - Yeah. When you say you don't have a result yet you mean it's - it's just that it's in process or that you - it finished and it didn't get a good result? No. No, no n- we have n- we have do the experiment only have the feature - the feature but Yeah. the experiment have we have not make the experiment and Oh. O_K. maybe will be good result or bad result, we don't know. Yeah. Yeah. Yeah. O_K. So um I suggest actually now we - we - we sorta move on and - and hear what's - what's - what's happening in - in other areas like what's - what's happening with your investigations Oh um about echos and so on. Well um I haven't started writing the test yet, I'm meeting with Adam today Mm-hmm. um and he's going t- show me the scripts he has for um running recognition on mee- Meeting Recorder digits. Mm-hmm. Uh I also um haven't got the code yet, I haven't asked Hynek for - for the - for his code yet. Cuz I looked at uh Avendano's thesis and I don't really understand what he's doing yet but it - it - it sounded like um the channel normalization part um of his thesis um was done in a - a bit of I don't know what the word is, a - a bit of a rough way um it sounded like he um he - he - it - it wasn't really fleshed out and maybe he did something that was interesting for the test situation but I - I'm not sure if it's what I'd wanna use so I have to - I have to read it more, I don't really understand what he's doing yet. O_K. It's my Yeah I haven't read it in a while so I'm not gonna be too much help unless I read it again, so. Oh yeah? I know this is mine here. O_K. Um. The um - so you, and then you're also gonna be doing this echo cancelling between the - the close mounted and the - and the - the - the - what we're calling a cheating experiment uh of sorts Uh I- between the distant - I'm ho- Right. Well - or I'm hoping - I'm hoping Espen will do it. Um Ah! O_K. u- F- um Delegate. That's good. It's good to delegate. I - I think he's at least planning to do it for the cl- close-mike cross-talk and so maybe I can just take whatever setup he has and use it. Great. Great. Yeah actually um he should uh I wonder who else is I think maybe it's Dan Ellis is going to be doing uh a different cancellation. Um. One of the things that people working in the meeting task wanna get at is they would like to have cleaner close-miked recordings. So uh this is especially true for the lapel but even for the close - close-miked uh cases um we'd like to be able to have um other sounds from other people and so forth removed from - So when someone isn't speaking you'd like the part where they're not speaking to actually be - So what they're talking about doing is using ec- uh echo cancellation-like techniques. It's not really echo but uh just um uh taking the input from other mikes and using uh uh a uh - an adaptive filtering approach to remove the effect of that uh other speech. So. Um what was it, there was - there was some - some - some point where eh uh Eric or somebody was - was speaking and he had lots of silence in his channel and I was saying something to somebody else uh which was in the background and it was not - it was recognizing my words, which were the background speech Hmm. on the close - close mike. Oh the - What we talked about yesterday? Yeah that was actually my - I was wearing the - Yes. Oh you - it was you I was I was wearing the lapel and you were sitting next to me, Yeah. and I only said one thing but you were talking and it was picking up all your words. Yeah. Yeah. So they would like clean channels. Uh and for that - mmm uh - that purpose uh they'd like to pull it out. So I think - I think Dan Ellis or somebody who was working with him was going to uh work on that. So. O_K. Right? Um. And uh I don't know if we've talked lately about the - the plans you're developing that we talked about this morning uh I don't remember if we talked about that last week or not, but maybe just a quick reprise of - of what we Yeah. O_K. were saying this morning. Uh. Um. So continuing to um extend uh Larry Saul's work um just reading - reading how - how we can take that as a front-end cuz it - it detects these features and they plug it into um back-end so I've been looking at a lot of um back-end stuff people have been doing articulatory features and seeing - seeing what I can - what I can pull off the shelf and plug into um Larry Saul's work. What about the stuff that um Mirjam has been doing? Oh yeah, sh- And - And Shawn? and S- Shawn, yeah. Yeah. They're - they're doing uh neural nets, just - just training up a whole bunch of neural nets and Oh. I - I think they're trying to understand um what's good about neural nets in - in terms of, you know, their patterns of errors and So they're training up nets to try to recognize these acoustic features? Yeah. I see. Yeah. But that's uh uh all - that's - is a - a certainly relevant uh study and, you know, what are the features that they're finding. We have this problem with the overloading of the term "feature" so Yeah. uh what are the variables, what we're calling this one, what are the variables that they're found - finding useful Hmm. um for - And their - their targets are based on canonical mappings of phones to acoustic f- Right. And that's certainly one thing to do and we're gonna try and do something more f- more fine than that features. but uh um so um So I guess you know what, I was trying to remember some of the things we were saying, do you ha- still have that - ? Oh yeah. Yeah. There's those that uh yeah, some of - some of the issues we were talking about was in j- just getting a good handle on - on uh what "good features" are and - What does - what did um Larry Saul use for - it was the sonorant uh detector, right? He di- he did uh yeah. How did he - H- how did he do that? Wh- what was his detector? We- oh. Um yeah, it was uh sonorance and he also had a paper on voicing too. Mm-hmm. Um and basically um in his variables that he used um or measures of S_N_R at - at sub-bands. Actually critical bands like Mm-hmm. um the um measures of correlation and covariance Oh, O_K. um within the sub-bands and um and at the upper level detecting uh sonorance and voicing. Mm-hmm. So how did he combine all these features? What - what r- mmm Oh. classifier did he u- Um he used uh um uh a - a belief-net where the lower levels of the belief-net are - correspond to individual tests of whether there is sonorance within this critical band Hmm. and then at an upper-level um there's like this soft "OR" gate so if - Oh right. You were talking about that, yeah. so if yeah. Yeah. I see. And the other thing you were talking about is - is - is where we get the targets from. So I mean, there's these issues of what are the - what are the variables that you use and do you combine them using the soft "AND-OR" or you do something, you know, more complicated um and then the other thing was so where do you get the targets from? The initial thing is just the obvious that we're discussing is starting up with phone labels from somewhere and then uh doing the transformation. But then the other thing is to do something better and eh w- why don't you tell us again about this - this database? This is the - Oh O_K. Um Yeah, so there's uh a group at um Edinburgh is working on um this MOCHA database where um they have measurements of um articulatory positions. So you - you put some - some pellets on people's tongues and lips Hmm! and - and they can tell And then tell them to talk naturally? Yeah, yeah. and they Well I guess if you got people who had like um you know, tongue rings - Pierced tongues and Pierced tongues, or - Yeah. You could just mount it to that and they wouldn't even notice. Yeah it doesn't matter . Yeah. Weld it. Zzz. But I - I don't - I don't think they're doing that though. Maybe you could go to these parlors and - and you could, you know - you know have - have, you know, reduced rates if you - Yeah. I- if you can do the measurements. That's right. You could - what you could do is you could sell little rings and stuff with embedded Yeah. you know, transmitters in them and things and Yeah, be cool and help science. Yeah. Ye- cool. Yeah. O_K. Yeah, so they - they - they have this - they're working on the database, it's still - it's still being - being uh transcribed and produced. Um where either you have um acoustic features at the same or - or just uh the acoustic waveform's being recorded for frame and then at each frame you have a measurement of - of the different positions of um uh articulators. Hmm! Yeah. There's a bunch of data that l- around, that - people have done studies like that w- way way back right? I mean I can't remember where - uh Wisconsin or someplace that used to have a big database of - Yeah they have a X_ - X_ray - Yeah. X_ray database. Yeah. It's I remember there was this guy at A_T_and_T, Randolph? or r- What was his name? Do you remember that guy? Um, researcher at A_T_and_T a while back that was studying, trying to do speech recognition from these kinds of features. Hmm. I can't remember what his name was. Dang. Now I'll think of it. Hmm. Do you mean eh - but you - I mean - Mar- you mean That's interesting. Well he was the guy - the guy that was using - when was - was Mark Randolph there, or - ? Mark Randolph. Yeah he's - he's - he's at Motorola now. Oh is he? Oh O_K. Yeah. Yeah. Yeah. Is it the guy that was using the pattern of pressure on the tongue or - ? I can't remember exactly what he was using, now. But I know - I just remember it had to do with you know What - Yeah. uh positional parameters and trying to m- you know Mm-hmm. do speech recognition based on them. Yeah. So the only - the only uh hesitation I had about it since, I mean I haven't see the data is it sounds like it's - it's continuous variables and a bunch of them. Hmm. And so I don't know how complicated it is to go from there - What you really want are these binary labels, and just a few of them. And maybe there's a trivial mapping if you wanna do it and it's e- but it - I - I - I worry a little bit that this is a research project in itself, whereas um if you did something instead that - like um having some manual annotation by uh you know, linguistics students, this would - there'd be a limited s- set of things that you could do a- as per our discussions with - with John before Mm-hmm. but the things that you could do, like nasality and voicing and a couple other things you probably could do reasonably well. Mm-hmm. And then there would - it would really be uh this uh uh binary variable. Course then, that's the other question is do you want binary variables. So. I mean the other thing you could do is boot trying to - to uh get those binary variables and take the continuous variables from uh the uh uh the data itself there, but I - I'm not sure - Could you cluster the - just do some kind of clustering? Guess you could, yeah. Bin them up into different categories and - Yeah. So anyway that's - that's uh - that's another whole direction that cou- could be looked at. Mm-hmm. Um. Um. I mean in general it's gonna be - for new data that you look at, it's gonna be hidden variable because we're not gonna get everybody sitting in these meetings to wear the pellets and - Right. Um. Right. So. So you're talking about using that data to get uh instead of using canonical mappings Right. of phones. So you'd use that data to give you sort of what the - the true mappings are for each phone? Mm-hmm. I see. Mm-hmm. Yeah. So wh- yeah, where this fits into the rest in - in my mind, I guess, is that um we're looking at different ways that we can combine uh different kinds of - of rep- front-end representations um in order to get robustness under difficult or even, you know, typical conditions. And part of it, this robustness, seems to come from uh multi-stream or multi-band sorts of things and Saul seems to have a reasonable way of looking at it, at least for one - one um articulatory feature. The question is is can we learn from that to change some of the other methods we have, since - I mean, one of the things that's nice about what he had I thought was that - that it - it um - the decision about how strongly to train the different pieces is based on uh a - a reasonable criterion with hidden variables rather than um just assuming that you should train e- e- every detector uh with equal strength towards uh it being this phone or that phone. Hmm. Right? So it - so um he's got these um uh uh he "AND's" between these different features. It's a soft "AND", I guess but in - in principle you - you wanna get a strong concurrence of all the different things that indicate something and then he "OR's" across the different - soft-"OR's" across the different uh multi-band channels. And um the weight yeah, the target for the training of the "AND" - "AND'ed" things is something that's kept uh as a hidden variable, and is learned with E_M. So he doesn't have - Whereas what we were doing is - is uh taking the phone target and then just back propagating from that which means that it's - it's uh i- It could be for instance that for a particular point in the data you don't want to um uh train a particular band - train the detectors for a particular band. You - you wanna ignore that band, cuz that's a - Ban- band is a noisy - noisy measure. Mm-hmm. And we don't - We're - we're still gonna try to train it up. In our scheme we're gonna try to train it up to do as well - well as it can at predicting. Uh. Maybe that's not the right thing to do. So he doesn't have to have truth marks or - Ho- F- right, and uh he doesn't have to have hard labels. Well at the - at the tail end, yeah, he has to know what's - where it's sonorant. Right. For the full band. But he's - but what he's- but what he's not training up - uh what he doesn't depend on as truth is um I guess one way of describing would be if - if a sound is sonorant is it sonorant in this band? Is it sonorant in that band? Is it sonorant in that band? Right. i- It's hard to even answer that what you really mean is that the whole sound is sonorant. So Mm-hmm. O_K. then it comes down to, you know, to what extent should you make use of information from particular band towards making your decision. I see. And um uh we're making in a sense sort of this hard decision that you should - you should use everything uh with - with uh equal strength. And uh because in the ideal case we would be going for posterior probabilities, if we had uh enough data to really get posterior probabilities and if the - if we also had enough data so that it was representative of the test data then we would in fact be doing the right thing to train everything as hard as we can. But um this is something that's more built up along an idea of robustness from - from the beginning and so you don't necessarily want to train everything up towards the - So where did he get his - uh his tar- his uh high-level targets about what's sonorant and what's not? From uh canonical mappings O_K. um at first and then Yeah. it's unclear um eh using TIMIT right, right. Using TIMIT? or using - Uh-huh. And then uh Yeah. he does some fine tuning um for um special cases. Yeah. Yeah. I mean we ha- we have a kind of iterative training because we do this embedded Viterbi, uh so there is some- something that's suggested, based on the data but it's - it's not - I think it s- doesn't seem like it's quite the same, cuz of this - cuz then whatever that alignment is, it's that for all - Mm-hmm. all bands. Well no, that's not quite right, we did actually do them separate - tried to do them separately so that would be a little more like what he did. Um. But it's still not quite the same because then it's - it's um setting targets based on where you would say the sound begins in a particular band. Where he's s- this is not a labeling per se. Mm-hmm. Might be closer I guess if we did a soft - soft target uh uh embedded neural net training like we've done a few times uh f- the forward um - do the forward calculations to get the gammas and train on those. Mmm. Uh what's next? I could say a little bit about w- stuff I've been playing with. Oh. I um You're playing? Huh? You're playing? Yes, I'm playing. Um so I wanted to do this experiment to see um uh what happens if we try to uh improve the performance of the back-end recognizer for the Aurora task and see how that affects things. And so I had this um - I think I sent around last week a - this plan I had for an experiment, this matrix where I would take the um - the original um the original system. So there's the original system trained on the mel cepstral features and then com- and then uh optimize the b- H_T_K system and run that again. So look at the difference there and then uh do the same thing for the I_C_S_I-O_G_I front-end. What - which test set was this? This is - that I looked at? Mm-hmm. Uh I'm looking at the Italian Mm-hmm. right now. So as far as I've gotten is I've uh been able to go through from beginning to end the um full H_T_K system for the Italian data and got the same results that um - that uh Stephane had. So um I started looking - to - and now I'm - I'm sort of lookin- at the point where I wanna know what should I change in the H_T_K back-end in order to try to - uh to improve it. So. One of the first things I thought of was the fact that they use the same number of states for all of the models Mm-hmm. and so I went on-line and I uh found a pronunciation dictionary for Italian digits Mm-hmm. and just looked at, you know, the number of phones in each one of the digits. Um you know, sort of the canonical way of setting up a - an H_M_M system is that you use um three states per phone and um so then the - the total number of states for a word would just be, you know, the number of phones times three. And so when I did that for the Italian digits, I got a number of states, ranging on the low end from nine to the high end, eighteen. Um. Now you have to really add two to that because in H_T_K there's an initial null and a final null so when they use uh models that have eighteen states, there're really sixteen states. They've got those initial and final null states. And so um their guess of eighteen states seems to be pretty well matched to the two longest words of the Italian digits, the four and five Mm-hmm. which um, according to my, you know, sort of off the cuff calculation, should have eighteen states each. And so they had sixteen. So that's pretty close. Um but for the - most of the words are sh- much shorter. So the majority of them wanna have nine states. And so theirs are s- sort of twice as long. So my guess - uh And then if you - I - I printed out a confusion matrix um uh for the well-matched case, and it turns out that the longest words are actually the ones that do the best. So my guess about what's happening is that you know, if you assume a fixed - the same amount of training data for each of these digits and a fixed length model for all of them but the actual words for some of them are half as long you really um have, you know, half as much training data for those models. Because if you have a long word and you're training it to eighteen states, uh you've got - Mm-hmm. you know, you've got the same number of Gaussians, you've gotta train in each case, but for the shorter words, you know, the total number of frames is actually half as many. Mm-hmm. So it could be that, you know, for the short words there's - because you have so many states, you just don't have enough data to train all those Gaussians. So um I'm going to try to um create more word-specific um uh prototype H_M_Ms to start training from. Yeah, I mean, it's not at all uncommon you do worse on long word- on short words than long words anyway just because you're accumulating more evidence for the - Mm-hmm. for the longer word, but. Yeah so I'll - I'll, the next experiment I'm gonna try is to just um you know create uh models that seem to be more w- matched to Mm-hmm. my guess about how long they should be. And as part of that um I wanted to see sort of how the um - how these models were coming out, you know, what w- when we train up uh th- you know, the model for " one ", which wants to have nine states, you know, what is the - uh what do the transition probabilities look like - in the self-loops, look like in - in those models? And so I talked to Andreas and he explained to me how you can calculate the expected duration of an H_M_M just Mm-hmm. by looking at the transition matrix and so I wrote a little Matlab script that calculates that and so I'm gonna sort of print those out for each of the words Mm-hmm. to see what's happening, you know, how these models are training up, you know, the long ones versus the short ones. Mm-hmm. I d- I did - quickly, I did the silence model and - and um that's coming out with about one point two seconds as its average duration and the silence model's the one that's used at the beginning and the end of each of the Wow. string of digits. Lots of silence. Yeah, yeah. And so the S_ P model, which is what they put in between digits, I - I haven't calculated that for that one yet, but um. So they basically - their - their model for a whole digit string is silence digit, S_P, digit, S_P blah-blah-blah and then silence at the end. And so. Are the S_P's optional? I mean skip them? I have to look at that, but I'm not sure that they are. Now the one thing about the S_ P model is really it only has a single s- emitting state to it. Mm-hmm. So if it's not optional, you know, it's - it's not gonna hurt a whole lot I see. and it's tied to the center state of the silence model so it's not its own - um Mm-hmm. It doesn't require its own training data, it just shares that state. Mm-hmm. So it, I mean, it's pretty good the way that they have it set up, but um i- So I wanna play with that a little bit more. I'm curious about looking at, you know how these models have trained and looking at the expected durations of the models and I wanna compare that in the - the well-matched case f- to the unmatched case, and see if you can get an idea of - just from looking at the durations of these models, you know, what- what's happening. Yeah, I mean, I think that uh, as much as you can, it's good to d- sort of not do anything really tricky. Mm-hmm. Not do anything that's really finely tuned, but just sort of Yeah. eh you know you t- you i- z- The premise is kind of you have a - a good person look at this for a few weeks and what do you come up with? Mm-hmm. Mm-hmm. And uh And Hynek, when I wa- told him about this, he had an interesting point, and that was th- um the - the final models that they end up training up have I think probably something on the order of six Gaussians per state. So they're fairly, you know, hefty models. And Hynek was saying that well, probably in a real application, you wouldn't have enough compute to handle models that are very big or complicated. So in fact what we may want are simpler models. Could be. And compare how they perform to that. But you know, it depends on what the actual application is and it's really hard to know what your limits are in terms of how many Gaussians you can have. Right. And that, I mean, at the moment that's not the limitation, so. Mm-hmm. I mean, I - I - I - what I thought you were gonna say i- but which I was thinking was um where did six come from? Probably came from the same place eighteen came from. You know, so. Yeah. Right. Uh that's another parameter, right? that - Yeah, yeah. that maybe, you know, uh - you really want three or nine or - Well one thing - I mean, if I - if - if I start um reducing the number of states for some of these shorter models that's gonna reduce the total number of Gaussians. So in a sense it'll be a simpler Right. system. Yeah. Yeah. But I think right now again the idea is doing just very simple things Yeah. how much better can you make it? And um Mm-hmm. since they're only simple things there's nothing that you're gonna do that is going to blow up the amount of computation um so Right. Right. if you found that nine was better than six that would be O_ K, I think, actually. Mm-hmm. Yeah. Doesn't have to go down. I really wasn't even gonna play with that part of the system yet, I was just gonna Mm-hmm, O_K. Yeah, just work with the models, yeah. change the - the t- yeah, just look at the length of the models and just see what happens. Yeah. So. Cool. O_K. So uh what's uh I guess your plan for - You - you - you guys' plan for the next - next week is just continue on these - these same things we've been talking about for Aurora and Yeah, I guess we can try to have some kind of new baseline for next week perhaps. with all these minor things modified. And then do other things, play with the spectral subtraction, and retry the M_S_G and things like that. Yeah. Yeah. Yeah we - we have a big list. Big list? You have a big list of - of things to do. So. Well that's good. I think that after all of this uh um confusion settles down in another - some point a little later next year there will be some sort of standard and it'll get out there and hopefully it'll have some effect from something that - that has uh been done by our group of people but uh e- even if it doesn't there's - there's go- there'll be standards after that. So. Does anybody know how to um run Matlab sort of in batch mode like you c- send it s- a bunch of commands to run and it gives you the output. Is it possible to do that? I - I think uh Mike tried it Yeah? and he says it's impossible so he went to Octave. Octave is the um UNIX clone of - of Matlab which you can batch. Octave. Ah! O_K . Great. Thanks. Yeah. I was going crazy trying to do that. Huh. Yeah. What is Octave so ? It's What's that? a free software? Uh, Octave? Yeah it's - it's - it's free. I think we have it here Yeah. r- running somewhere. Great! Yeah. And it does the same syntax and everything eh Um like Matlab, or - ? i- it's a little behind, it's the same syntax but it's a little behind in that Matlab went to these like um you can have cells and you can - you can uh implement object-oriented type things with Matlab. Uh Octave doesn't do that yet, so I think you, Octave is kinda like Matlab um four point something or. If it'll do like a lot of the basic The basic stuff, right. matrix and vector stuff that's perfect. Yeah. Great! O_K, guess we're done. O_K. Well , although by the way. 